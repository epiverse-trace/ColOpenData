[{"path":"https://epiverse-trace.github.io/ColOpenData/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ColOpenData authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/climate_data.html","id":"retrieving-climate-data-for-a-roi-using-stations-data","dir":"Articles","previous_headings":"","what":"Retrieving climate data for a ROI using stations’ data","title":"How to download climate data using ColOpenData","text":"example, need create spatial polygon around municipality Espinal use ROI retrieve climate data. create spatial polygon need introduce coordinates geometry. simplicity, build bounding box introducing 4 points bound municipality, transform created geometry sf object (see sf library details). created ROI, can make simple visualization using leaflet. can make first exploration check stations contained inside , using function stations_in_roi(). can see region 24 stations. Different categories recorded different stations, can checked column categoria. Stations categories Climática Principal Climática Ordinaria records temperature. stations suspended, means taking measurements moment. information found column estado , suspended, observation Suspendida Also, column fecha_suspension observation different NA, since suspended stations associated suspension date. However, even station suspended, historical data (suspension date) can accessed. filter stations recorded information desired period, can delete stations suspension dates 2013. original 24 stations, 1 working whole period interest collected information Dry-Bulb Temperature (TSSM_CON). important consider data collection, information might lost due quality attributes. stations, can access TMX_CON 2013 2016. , can use function download_climate_stations(). function following parameters: stations: data.frame containing stations’ codes. data.frame must retrieved function stations_in_roi. start_date: character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date: character last date consult format \"YYYY-MM_DD\". (Last available date \"2023-05-31\"). tag: character containing climate tag consult. returned tidy data.frame includes: individual unique station code, longitude, latitude, date, hour, tag requested value recorded specified time. tidy structure reports row observation, makes subset plot easier. plot time series stations’ data can use ggplot() function ggplot2 package follows:  can see, one station data selected period. However, data measured hours, easily observe changes temperature patterns along time. aid issue, use aggregation function aggregate_climate(), aggregates climate data time. function takes parameter desired aggregation. ## methods ::: {style=“text-align: justify;”} retrieve climate data ROI country, without manually extracting stations’ data, can use function download_climate_geom(). function following parameters: geometry: sf geometry containing geometry given ROI. geometry can either POLYGON MULTIPOLYGON. start_date: character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date: character last date consult format \"YYYY-MM_DD\". (Last available date \"2023-05-31\"). tag: character containing climate tag consult. replicate previous example, can just use previously created ROI add aggregation month. can add aggregation function workflow using pipe operator %>%. following code retrieve results previous one. ::: make download process even easier, avoid creation already known geometries like municipalities departments, ColOpenData offers extra function download data using areas’ DIVIPOLA code. DIVIPOLA codification standardized whole country, contains departments’ municipalities’ codes. details DIVIPOLA codification functions please refer Documentation Dictionaries. filter city Espinal department Tolima. ::: function download_climate() require almost arguments download_climate_geom(), instead sf object, take character containing DIVIPOLA code: code: character DIVIPOLA code area. start_date: character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date: character last date consult format \"YYYY-MM_DD\". (Last available date \"2023-05-31\"). tag: character containing climate tag consult. code can used get results previous two examples, without need create whole geometry filtering individual stations.","code":"lat <- c(4.263744, 4.263744, 4.078156, 4.078156, 4.263744) lon <- c(-75.042067, -74.777022, -74.777022, -75.042067, -75.042067) polygon <- st_polygon(x = list(cbind(lon, lat))) %>% st_sfc() roi <- st_as_sf(polygon) leaflet(roi) %>%   addProviderTiles(\"OpenStreetMap\") %>%   addPolygons(     stroke = TRUE,     weight = 2,     color = \"#2e6930\",     fillColor = \"#2e6930\",     opacity = 0.6   ) stations <- stations_in_roi(geometry = roi)  head(stations) #> Simple feature collection with 6 features and 20 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -75 ymin: 4.15 xmax: -74.78361 ymax: 4.258278 #> CRS:           NA #>        codigo                      nombre           categoria #> 78   21185090    NATAIMA - AUT [21185090]   Agrometeorológica #> 1544 21170020    DOS AGUAS LAS [21170020]       Pluviométrica #> 1692 21180220 AEROPUERTO FARCA [21180220]       Pluviométrica #> 1929 21180230  BAMBU EL MOLINO [21180230]       Pluviométrica #> 1935 21215090        MARANONES [21215090] Climática Ordinaria #> 2084 21215080         CHICORAL [21215080] Climática Ordinaria #>                     tecnologia     estado departamento       municipio #> 78   Automática con Telemetría     Activa       Tolima         Espinal #> 1544              Convencional     Activa       Tolima Suárez (Tolima) #> 1692              Convencional Suspendida       Tolima         Espinal #> 1929              Convencional Suspendida       Tolima         Espinal #> 1935              Convencional Suspendida       Tolima         Espinal #> 2084              Convencional     Activa       Tolima         Espinal #>         latitud     longitud altitud fecha_instalacion #> 78   4.18813889 -74.96047222     393        2005-10-16 #> 1544 4.25827778 -74.78361111    3394        1951-01-15 #> 1692       4.15        -74.9     350        1979-11-15 #> 1929        4.2        -75.0     390        1979-11-15 #> 1935 4.21666667 -74.93333333     370        1959-06-15 #> 2084 4.23152778 -74.99536111     432        1963-05-15 #>                  area_operativa   corriente area_hidrografica zona_hidrografica #> 78   Area Operativa 10 - Tolima      Cuinde   Magdalena Cauca    Alto Magdalena #> 1544 Area Operativa 10 - Tolima      Coello   Magdalena Cauca    Alto Magdalena #> 1692 Area Operativa 10 - Tolima       Tuamo   Magdalena Cauca    Alto Magdalena #> 1929 Area Operativa 10 - Tolima Rio Salinas   Magdalena Cauca    Alto Magdalena #> 1935 Area Operativa 10 - Tolima      Blanco   Magdalena Cauca    Alto Magdalena #> 2084 Area Operativa 10 - Tolima       Luisa   Magdalena Cauca    Alto Magdalena #>                                 subzona_hidrografica #> 78           Río Luisa y otros directos al Magdalena #> 1544 Directos Magdalena entre ríos Cabrera y Sumapaz #> 1692         Río Luisa y otros directos al Magdalena #> 1929         Río Luisa y otros directos al Magdalena #> 1935                                      Río Coello #> 2084                                      Río Coello #>                                                          entidad #> 78   INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #> 1544 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #> 1692 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #> 1929 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #> 1935 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #> 2084 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES #>      fecha_suspension codigo_municipio codigo_departamento #> 78               <NA>            73268                  73 #> 1544             <NA>            73770                  73 #> 1692       2000-04-15            73268                  73 #> 1929       1984-10-15            73319                  73 #> 1935       1971-08-15            73200                  73 #> 2084             <NA>            73268                  73 #>                        geometry #> 78   POINT (-74.96047 4.188139) #> 1544 POINT (-74.78361 4.258278) #> 1692         POINT (-74.9 4.15) #> 1929            POINT (-75 4.2) #> 1935 POINT (-74.93333 4.216667) #> 2084 POINT (-74.99536 4.231528) cw_stations <- stations %>%   filter(     as.Date(fecha_suspension) > as.Date(\"2013-01-01\") | estado == \"Activa\",     categoria %in% c(\"Climática Principal\", \"Climática Ordinaria\")   )  head(cw_stations) #> Simple feature collection with 1 feature and 20 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -74.99536 ymin: 4.231528 xmax: -74.99536 ymax: 4.231528 #> CRS:           NA #>     codigo              nombre           categoria   tecnologia estado #> 1 21215080 CHICORAL [21215080] Climática Ordinaria Convencional Activa #>   departamento municipio    latitud     longitud altitud fecha_instalacion #> 1       Tolima   Espinal 4.23152778 -74.99536111     432        1963-05-15 #>               area_operativa corriente area_hidrografica zona_hidrografica #> 1 Area Operativa 10 - Tolima     Luisa   Magdalena Cauca    Alto Magdalena #>   subzona_hidrografica #> 1           Río Coello #>                                                       entidad fecha_suspension #> 1 INSTITUTO DE HIDROLOGIA METEOROLOGIA Y ESTUDIOS AMBIENTALES             <NA> #>   codigo_municipio codigo_departamento                   geometry #> 1            73268                  73 POINT (-74.99536 4.231528) tssm_stations <- download_climate_stations(   stations = cw_stations,   start_date = \"2013-01-01\",   end_date = \"2016-12-31\",   tag = \"TSSM_CON\" ) #> Original data is retrieved from the Institute of Hydrology, Meteorology #> and Environmental Studies (Instituto de Hidrología, Meteorología y #> Estudios Ambientales - IDEAM). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative.  head(tssm_stations) #>    station    longitude   latitude       date     hour      tag value #> 1 21215080 -74.99536111 4.23152778 2013-01-01 07:00:00 TSSM_CON  23.2 #> 2 21215080 -74.99536111 4.23152778 2013-01-01 13:00:00 TSSM_CON  32.0 #> 3 21215080 -74.99536111 4.23152778 2013-01-01 18:00:00 TSSM_CON  27.2 #> 4 21215080 -74.99536111 4.23152778 2013-01-02 07:00:00 TSSM_CON  22.6 #> 5 21215080 -74.99536111 4.23152778 2013-01-02 13:00:00 TSSM_CON  32.0 #> 6 21215080 -74.99536111 4.23152778 2013-01-02 18:00:00 TSSM_CON  27.0 ggplot(data = tssm_stations) +   geom_line(aes(x = date, y = value, group = station), color = \"#106ba0\") +   ggtitle(\"Dry-bulb Temperature in Espinal by station\") +   xlab(\"Date\") +   ylab(\"Temperature [°C]\") +   facet_grid(rows = vars(station)) +   theme_minimal() +   theme(     plot.background = element_rect(fill = \"white\", colour = \"white\"),     panel.background = element_rect(fill = \"white\", colour = \"white\"),     plot.title = element_text(hjust = 0.5)   ) tssm_month <- tssm_stations %>% aggregate_climate(frequency = \"month\")  ggplot(data = tssm_month) +   geom_line(aes(x = date, y = value, group = station), color = \"#106ba0\") +   ggtitle(\"Dry-bulb Temperature in Espinal by station\") +   xlab(\"Date\") +   ylab(\"Dry-bulb temperature [C]\") +   facet_grid(rows = vars(station)) +   theme_minimal() +   theme(     plot.background = element_rect(fill = \"white\", colour = \"white\"),     panel.background = element_rect(fill = \"white\", colour = \"white\"),     plot.title = element_text(hjust = 0.5)   ) tssm_roi <- download_climate_geom(   geometry = roi,   start_date = \"2013-01-01\",   end_date = \"2016-12-31\",   tag = \"TSSM_CON\" ) %>% aggregate_climate(frequency = \"month\") espinal_code <- name_to_code_mun(\"Tolima\", \"Espinal\") espinal_code #> [1] \"73268\" tssm_mpio <- download_climate(   code = espinal_code,   start_date = \"2013-01-01\",   end_date = \"2016-12-31\",   tag = \"TMX_CON\" ) %>% aggregate_climate(frequency = \"month\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/climate_data.html","id":"disclaimer","dir":"Articles","previous_headings":"","what":"Disclaimer","title":"How to download climate data using ColOpenData","text":"Data availability subdued station’s measurements quality filters. cases, leads lower amount data, considering extensive amount climate stations. Temporal aggregation available tags limited ones specific methodology aggregation reported IDEAM. daily, monthly annual aggregation available : TSSM_CON: Dry-bulb temperature TMX_CON: Maximum temperature TMN_CON: Minimum temperature PTPM_CON: Precipitation BSHG_CON: Sunshine duration Temporal spatial interpolation included version ColOpenData.","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/demographic_data.html","id":"documentation-access","dir":"Articles","previous_headings":"Initial Exploration: Basic Data Handling with ColOpenData","what":"Documentation access","title":"A Deep Dive into Colombian Demographics Using ColOpenData","text":"First, access demographic documentation, check available datasets. checking documentation, can load data want work . , use download_demographic() function takes parameter dataset name, presented documentation. first example focus CNPV dataset.","code":"datasets_dem <- list_datasets(module = \"demographic\", language = \"EN\")  head(datasets_dem) #> # A tibble: 6 × 7 #>   name                group       source year  level        category description #>   <chr>               <chr>       <chr>  <chr> <chr>        <chr>    <chr>       #> 1 DANE_CNPVH_2018_1HD demographic DANE   2018  department   househo… Number of … #> 2 DANE_CNPVH_2018_1HM demographic DANE   2018  municipality househo… Number of … #> 3 DANE_CNPVH_2018_2HD demographic DANE   2018  department   househo… Number of … #> 4 DANE_CNPVH_2018_2HM demographic DANE   2018  municipality househo… Number of … #> 5 DANE_CNPVH_2018_3HD demographic DANE   2018  department   househo… Households… #> 6 DANE_CNPVH_2018_3HM demographic DANE   2018  municipality househo… Households…"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/demographic_data.html","id":"data-load","dir":"Articles","previous_headings":"Initial Exploration: Basic Data Handling with ColOpenData","what":"Data load","title":"A Deep Dive into Colombian Demographics Using ColOpenData","text":"can seen , public_services_d presents information regarding availability public services country department level. Now, data , example, find proportion dwellings access water supply system (WSS) department plot .","code":"public_services_d <- download_demographic(dataset = \"DANE_CNPVV_2018_8VD\") #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative.  head(public_services_d) #>   codigo_departamento   departamento     area  servicio_publico      disponible #> 1                  00 Total nacional    total energia_electrica              si #> 2                  00 Total nacional    total energia_electrica              no #> 3                  00 Total nacional    total energia_electrica sin_informacion #> 4                  00 Total nacional cabecera energia_electrica              si #> 5                  00 Total nacional cabecera energia_electrica              no #> 6                  00 Total nacional cabecera energia_electrica sin_informacion #>      total #> 1 12984126 #> 2   496603 #> 3        0 #> 4 10485896 #> 5    81579 #> 6        0"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/demographic_data.html","id":"data-filter-and-plot","dir":"Articles","previous_headings":"Initial Exploration: Basic Data Handling with ColOpenData","what":"Data filter and plot","title":"A Deep Dive into Colombian Demographics Using ColOpenData","text":"First subset data presents information regarding WSS department. subset, can calculate total counts department. , can calculate proportions “yes” (“si”) department. plotting purposes, change name “San Andrés”, since complete name long. Finally, can plot results","code":"wss <- public_services_d %>%   filter(     area == \"total_departamental\",     servicio_publico == \"acueducto\"   ) %>%   select(departamento, disponible, total) total_counts <- wss %>%   group_by(departamento) %>%   summarise(total_all = sum(total)) %>%   ungroup() proportions_wss <- wss %>%   filter(disponible == \"si\") %>%   left_join(total_counts, by = \"departamento\") %>%   mutate(proportion_si = total / total_all) proportions_wss[28, \"departamento\"] <- \"SAPSC\" ggplot(proportions_wss, aes(   x = reorder(departamento, -proportion_si),   y = proportion_si )) +   geom_bar(stat = \"identity\", fill = \"#10bed2\", color = \"black\", width = 0.6) +   labs(     title = \"Proportion of dwellings with access to WSS by department\",     x = \"Department\",     y = \"Proportion\"   ) +   theme_minimal() +   theme(     plot.background = element_rect(fill = \"white\", colour = \"white\"),     panel.background = element_rect(fill = \"white\", colour = \"white\"),     axis.text.x = element_text(angle = 45, hjust = 1),     plot.title = element_text(hjust = 0.5)   )"},{"path":[]},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"understanding-demographic-datasets","dir":"Articles","previous_headings":"Naming and structure","what":"Understanding Demographic Datasets","title":"Documentation and Dictionaries","text":"Demographic data provided multiple datasets source. download data, naming framework implemented, includes source, group, year final details individual identification. Details different every dataset related internal information contain. general frame can used follows: SOURCE_GROUP_YEARS_DETAILS Demographic datasets available municipalities departments, contain data Dwellings, Households, Population Population Projections five categories. Viviendas (Dwellings). Hogares (Households). Personas Social (Persons Social). Personas Demográfico (Persons Demographic). datasets retrieved National Administrative Department Statistics (DANE). Naming stated follows: Source: DANE. Viviendas: CNPVV. Hogares: CNPVH. Personas Social: CNPVPS. Personas Demográfico: CNPVPD. Census data: 2018 Details: related individual dataset. details please check function list_datasets() . hands examples please check Deep Dive Colombian Demographics Using ColOpenData.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"understanding-geospatial-datasets","dir":"Articles","previous_headings":"Naming and structure","what":"Understanding Geospatial Datasets","title":"Documentation and Dictionaries","text":"Geospatial datasets naming related level aggregation, since available Blocks Departments. datasets come DANE, part National Geostatistical Framework (MGN), 2018 included summarized version National Population Dwelling Census (CNPV). Available spatial levels include: department, municipality, urban rural sector, urban rural section, urban zone blocks. Please check Maps plots ColOpenData details.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"understanding-climate-dataset","dir":"Articles","previous_headings":"","what":"Understanding Climate Dataset","title":"Documentation and Dictionaries","text":"module’s data stored unique dataset, information required use related functions area interest, dates, tags consulted. Individual tags required download data include: tags meant used download using download_climate(), download_climate_geom() download_climate_stations(). See download climate data using ColOpenData details.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"understanding-population-projections","dir":"Articles","previous_headings":"","what":"Understanding Population Projections","title":"Documentation and Dictionaries","text":"Population projections back-projections available national, department municipality levels, divided sex ethnicity (latter available municipalities). names datasets relate source, years included, sex ethnicity. examples consult data please refer Population Projection ColOpenData","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"list-data","dir":"Articles","previous_headings":"","what":"List Data","title":"Documentation and Dictionaries","text":"check available datasets can use list_datasets() function. associated information can filtered module parameter indicate specific module. Default \"\", can filtered \"demographic\", \"geospatial\", \"climate\" \"population_projections\". function can also presented English (EN) Spanish (ES) language parameter. Default \"ES\", can \"EN\" well. list demographic datasets can use: highly recommend using View() instead head() local environment cleaner easier visualization information. Using function, can retrieve names, source, aggregation level information individual datasets.","code":"library(ColOpenData) datasets <- list_datasets(language = \"EN\")  head(datasets) #> # A tibble: 6 × 7 #>   name                 group      source year  level        category description #>   <chr>                <chr>      <chr>  <chr> <chr>        <chr>    <chr>       #> 1 DANE_MGN_2018_DPTO   geospatial DANE   2018  department   maps     Geographic… #> 2 DANE_MGN_2018_MPIO   geospatial DANE   2018  municipality maps     Geographic… #> 3 DANE_MGN_2018_MPIOCL geospatial DANE   2018  municipalit… maps     Geographic… #> 4 DANE_MGN_2018_SETU   geospatial DANE   2018  urban_sector maps     Geographic… #> 5 DANE_MGN_2018_SETR   geospatial DANE   2018  rural_sector maps     Geographic… #> 6 DANE_MGN_2018_SECU   geospatial DANE   2018  urban_secti… maps     Geographic… demographic_datasets <- list_datasets(module = \"demographic\", language = \"EN\")  head(demographic_datasets) #> # A tibble: 6 × 7 #>   name                group       source year  level        category description #>   <chr>               <chr>       <chr>  <chr> <chr>        <chr>    <chr>       #> 1 DANE_CNPVH_2018_1HD demographic DANE   2018  department   househo… Number of … #> 2 DANE_CNPVH_2018_1HM demographic DANE   2018  municipality househo… Number of … #> 3 DANE_CNPVH_2018_2HD demographic DANE   2018  department   househo… Number of … #> 4 DANE_CNPVH_2018_2HM demographic DANE   2018  municipality househo… Number of … #> 5 DANE_CNPVH_2018_3HD demographic DANE   2018  department   househo… Households… #> 6 DANE_CNPVH_2018_3HM demographic DANE   2018  municipality househo… Households…"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"list-data-using-keywords","dir":"Articles","previous_headings":"","what":"List Data Using Keywords","title":"Documentation and Dictionaries","text":"Sometimes, going dataset find specific information can tiring. want look specific word set words within datasets quickly, can use look_up() function, takes parameter: word (words) interested (input character vector characters). module wish search within (default \"\"). search condition: \"\" find datasets containing specified words, \"\" find datasets containing specified words (default \"\"). searching single word, can use either \"\"\"\" parameter. language keywords , can \"EN\" \"ES\" (default \"EN\"). can specify module make narrow precise search.","code":"age_datasets <- look_up(keywords = \"age\")  head(age_datasets) #> # A tibble: 6 × 7 #>   name                 group       source year  level       category description #>   <chr>                <chr>       <chr>  <chr> <chr>       <chr>    <chr>       #> 1 DANE_CNPVH_2018_1HD  demographic DANE   2018  department  househo… Number of … #> 2 DANE_CNPVH_2018_1HM  demographic DANE   2018  municipali… househo… Number of … #> 3 DANE_CNPVH_2018_2HD  demographic DANE   2018  department  househo… Number of … #> 4 DANE_CNPVH_2018_2HM  demographic DANE   2018  municipali… househo… Number of … #> 5 DANE_CNPVPD_2018_1PD demographic DANE   2018  department  persons… Total cens… #> 6 DANE_CNPVPD_2018_1PM demographic DANE   2018  municipali… persons… Total cens… area_sex_datasets <- look_up(   keywords = c(\"area\", \"sex\"),   module = \"demographic\",   logic = \"and\",   language = \"EN\" )  head(area_sex_datasets) #> # A tibble: 6 × 7 #>   name                 group       source year  level       category description #>   <chr>                <chr>       <chr>  <chr> <chr>       <chr>    <chr>       #> 1 DANE_CNPVPD_2018_1PD demographic DANE   2018  department  persons… Total cens… #> 2 DANE_CNPVPD_2018_1PM demographic DANE   2018  municipali… persons… Total cens… #> 3 DANE_CNPVPD_2018_3PD demographic DANE   2018  department  persons… Total cens… #> 4 DANE_CNPVPD_2018_3PM demographic DANE   2018  municipali… persons… Total cens… #> 5 DANE_CNPVPD_2018_4PD demographic DANE   2018  department  persons… Census pop… #> 6 DANE_CNPVPD_2018_4PM demographic DANE   2018  municipali… persons… Census pop…"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"geospatial-dictionaries","dir":"Articles","previous_headings":"","what":"Geospatial dictionaries","title":"Documentation and Dictionaries","text":"Datasets inside geospatial module contain summarized version census dictionary needed understand aggregated variables. dictionaries contain necessary metadata use available information. retrieve , can use function geospatial_dictionary(), using spatial level language parameters:","code":"dict_mpio <- geospatial_dictionary(   spatial_level = \"municipality\",   language = \"EN\" )  head(dict_mpio) #> # A tibble: 6 × 4 #>   variable                 type         length description                       #>   <chr>                    <chr>         <dbl> <chr>                             #> 1 codigo_departamento      Text              2 Department code                   #> 2 codigo_municipio_sin_con Text              3 Municipality code                 #> 3 municipio                Text            250 Municipality name                 #> 4 codigo_municipio         Text              5 Concatenated municipality code    #> 5 version                  Long Integer     NA Year of the geographic informati… #> 6 area                     Double           NA Municipality area in square mete…"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"climate-tags","dir":"Articles","previous_headings":"","what":"Climate tags","title":"Documentation and Dictionaries","text":"Climate data stored multiple datasets unique dataset numerous tags. tags can also consulted function get_climate_tags(), takes parameter tags language, can \"EN\" \"ES\" (default \"ES\").","code":"dict_climate <- get_climate_tags(language = \"EN\")  head(dict_climate) #>        tag                          variable #> 1 TSSM_CON              Dry-bulb Temperature #> 2 THSM_CON              Wet-bulb Temperature #> 3  TMN_CON               Minimum Temperature #> 4  TMX_CON               Maximum Temperature #> 5 TSTG_CON Dry-bulb Temperature (Termograph) #> 6   HR_CAL                 Relative Humidity #>                                   frequency #> 1 Hourly (07:00, 13:00, 18:00 and/or 19:00) #> 2 Hourly (07:00, 13:00, 18:00 and/or 19:00) #> 3                                     Daily #> 4                                     Daily #> 5                         Hourly (24 hours) #> 6 Hourly (07:00, 13:00, 18:00 and/or 19:00)"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/documentation_and_dictionaries.html","id":"divipola","dir":"Articles","previous_headings":"","what":"DIVIPOLA","title":"Documentation and Dictionaries","text":"DIVIPOLA codification standardized frame whole country, contains departments’ municipalities’ codes. Departments two digits individual identification, municipalities five. five numbers municipalities’ codes include department located (first two digits) number municipality within department (last three digits). codes municipality department can consulted table provided National Platform Colombian Open Data. can also consulted using divipola_table() function. get DIVIPOLA code municipality department can use auxiliary functions divipola_municipality_code() divipola_department_code() ColOpenData. retrieve department code include department’s name: retrieve municipality code must include department name municipality name. consider repetition among municipalities’ names across departments. individual codes can used filter information datasets. hand, departments’ municipalities’ codes can translated retrieve official names using divipola_municipality_name() divipola_department_name().","code":"divipola <- divipola_table() head(divipola) #>   codigo_departamento codigo_municipio departamento  municipio      tipo #> 1                  05            05001    Antioquia   Medellín Municipio #> 2                  05            05002    Antioquia  Abejorral Municipio #> 3                  05            05004    Antioquia   Abriaquí Municipio #> 4                  05            05021    Antioquia Alejandría Municipio #> 5                  05            05030    Antioquia      Amagá Municipio #> 6                  05            05031    Antioquia     Amalfi Municipio name_to_code_dep(department_name = \"Guajira\") #> [1] \"44\" name_to_code_mun(   department_name = \"Boyacá\",   municipality_name = \"Tunja\" ) #> [1] \"15001\" code_to_name_mun(municipality_code = \"15001\") #> [1] \"Tunja\""},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/geospatial_data.html","id":"downloading-geospatial-data","dir":"Articles","previous_headings":"","what":"Downloading geospatial data","title":"Maps and plots with ColOpenData","text":"First, download data using function download_geospatial(), including geometries census related information. simplified parameter used download lighter version, since simple plots require precise spatial information. understand column contains internet related information, need corresponding dataset dictionary. download dictionary can use geospatial_dictionary() function. function uses parameters dataset name download associated information language information. information please refer documentation dictionaries previously mentioned. calculate percentage dwellings internet connection, need know number dwellings internet connection total dwellings department. dictionary, get number dwellings internet connection viv_internet total dwellings viviendas. calculate percentage follows:","code":"dpto <- download_geospatial(   spatial_level = \"dpto\",   simplified = TRUE,   include_geom = TRUE,   include_cnpv = TRUE ) #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative.  head(dpto) #> Simple feature collection with 6 features and 88 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -77.92834 ymin: -0.70584 xmax: -66.84722 ymax: 6.324304 #> Geodetic CRS:  WGS 84 #>   codigo_departamento    departamento version         area   latitud  longitud #> 1                  18         Caquetá    2018  90103008160 0.7985562 -73.95947 #> 2                  19           Cauca    2018  31242914793 2.3968339 -76.82423 #> 3                  86        Putumayo    2018  25976283135 0.4522600 -75.85591 #> 4                  76 Valle del Cauca    2018  20665544525 3.8588583 -76.51869 #> 5                  94         Guainía    2018  71289354481 2.7278429 -68.81661 #> 6                  99         Vichada    2018 100063370591 4.7135571 -69.41400 #>   encuestas enc_etnico enc_no_etnico enc_resguardo_indigena enc_comun_negras #> 1    163381       1117        162264                   1117                0 #> 2    622959      83033        539926                  70827            12206 #> 3    147797       4704        143093                   4659               45 #> 4   1674673      18250       1656423                   3618            14632 #> 5     13059       3675          9384                   3675                0 #> 6     24915       6870         18045                   6870                0 #>   enc_area_protegida enc_area_no_protegida un_vivienda un_mixto un_no_res #> 1                544                162837      132937     5429     24804 #> 2                226                622733      446806    10837    165011 #> 3               1389                146408      107456     3397     36789 #> 4              21431               1653242     1410067    39096    224820 #> 5                532                 12527       11111      293      1553 #> 6                171                 24744       20051      747      4016 #>   un_lea un_mixto_no_res_industria un_mixto_no_res_comercio #> 1    211                        96                     3860 #> 2    324                       328                     6147 #> 3    173                        67                     2572 #> 4    690                      1920                    22705 #> 5    102                        12                      154 #> 6    101                        12                      548 #>   un_mixto_no_res_servicios un_mixto_no_res_agro un_mixto_no_res_sin_info #> 1                      1117                  243                      113 #> 2                      2276                 2016                       70 #> 3                       717                   29                       12 #> 4                     11986                 2357                      128 #> 5                       106                    6                       15 #> 6                       151                   22                       14 #>   un_no_res_industria un_no_res_comercio un_no_res_servicios un_no_res_agro #> 1                 160               5422                2511           3052 #> 2                 810              10334                9455          43342 #> 3                 188               4402                2485           6665 #> 4                5572              50097               40191          32665 #> 5                  15                244                 263             24 #> 6                  13                601                 418             25 #>   un_no_res_institucional un_no_res_lote un_no_res_parque un_no_res_minero #> 1                    1250          10099              678               12 #> 2                    3515          86486             3155              105 #> 3                    1428          18445              368               74 #> 4                    5452          67080             6881              169 #> 5                     149            597               35                7 #> 6                     220           2290              109                3 #>   un_no_res_proteccion u_no_res_construccion u_no_res_sin_info viviendas #> 1                   96                  1453                71    138366 #> 2                  969                  6596               244    457643 #> 3                  319                  2334                81    110853 #> 4                 1340                 14970               403   1449163 #> 5                    5                   206                 8     11404 #> 6                    6                   325                 6     20798 #>   viv_casa viv_apartamento viv_cuarto viv_trad_indigena viv_trad_etnica #> 1   115307           18322       3591               493              35 #> 2   372096           33837      18177             30035            2187 #> 3    90540           11052       8098               684              49 #> 4   902928          490230      52855              1173             518 #> 5     8577             690        311              1697              34 #> 6    14875            1163        719              3823              88 #>   viv_otro viv_ocupado_personas viv_ocupado_sin_personas viv_temporal #> 1      618               110525                     4306         7299 #> 2     1311               367793                    24327        32268 #> 3      430                91508                     3418         5761 #> 4     1459              1231570                    64873        41444 #> 5       95                 9364                       72          660 #> 6      130                17699                      184          906 #>   viv_desocupado hogares viv_energia viv_sin_energia viv_energia_estrato_1 #> 1          16236  116166       93242           17283                 70029 #> 2          33255  432493      336910           30883                228576 #> 3          10166  107053       70944           20564                 58033 #> 4         111276 1267039     1216379           15191                321720 #> 5           1308    9953        5822            3542                  3421 #> 6           2009   19162        7697           10002                  5721 #>   viv_energia_estrato_2 viv_energia_estrato_3 viv_energia_estrato_4 #> 1                 16659                  3868                   523 #> 2                 51555                 22577                 10705 #> 3                  9096                  1002                    46 #> 4                438056                295053                 84368 #> 5                  1401                   144                     5 #> 6                  1351                   214                     5 #>   viv_energia_estrato_5 viv_energia_estrato_6 viv_energia_sin_estrato #> 1                    20                     7                    2136 #> 2                  2682                   564                   20251 #> 3                    15                    37                    2715 #> 4                 54589                 16599                    5994 #> 5                     3                     1                     847 #> 6                     1                     1                     404 #>   viv_acueducto viv_sin_acueducto viv_alcantarillado viv_sin_alcantarillado #> 1         80362             30163              72630                  37895 #> 2        239233            128560             163290                 204503 #> 3         47315             44193              49898                  41610 #> 4       1174360             57210            1119657                 111913 #> 5          2047              7317               2621                   6743 #> 6          6506             11193               1140                  16559 #>   viv_gas viv_sin_gas viv_sin_info_gas viv_rec_basuras viv_sin_rec_basuras #> 1   40608       67966             1951           80237               30288 #> 2  101100      264114             2579          163693              204100 #> 3   13261       77496              751           54930               36578 #> 4 1003741      218169             9660         1156676               74894 #> 5       0        9364                0            3615                5749 #> 6       0       17699                0            6424               11275 #>   viv_internet viv_sin_internet viv_sin_info_internet personas per_leas #> 1        16740            91374                  2411   359602    11260 #> 2        57774           307230                  2789  1243503     7969 #> 3         9947            80704                   857   283197     5720 #> 4       683961           537450                 10159  3789874    27645 #> 5          693             8442                   229    44431     6849 #> 6          903            16357                   439    76642     5237 #>   per_hogares_particulares hombres mujeres per_0_a_9 per_10_a_19 per_20_a_29 #> 1                   348342  182378  177224     63844       78433       62230 #> 2                  1235534  615833  627670    198781      224899      218267 #> 3                   277477  142900  140297     47232       60789       51033 #> 4                  3762229 1800614 1989260    460691      571709      632594 #> 5                    37582   23214   21217     11162       12028        7334 #> 6                    71405   40694   35948     19441       19099       12840 #>   per_30_a_39 per_40_a_49 per_50_a_59 per_60_a_69 per_70_a_79 per_80_mas #> 1       50014       39637       31396       19015       10148       4885 #> 2      184644      141446      119102       81959       48453      25952 #> 3       42216       32710       23515       14118        7828       3756 #> 4      556818      489478      468483      325926      183070     101105 #> 5        5070        3781        2749        1327         739        241 #> 6        9268        6869        4910        2628        1104        483 #>   per_ed_primaria per_ed_secundaria per_ed_superior per_ed_posgrado #> 1          113225             24649           17680             904 #> 2          434283            195877          105690            7288 #> 3           85979             30892           20987             501 #> 4          851033            446077          636722           44248 #> 5           18602              2788            2227              28 #> 6           27247              7596            2690              32 #>   per_ed_sin_educacion per_ed_sin_info shape_length shape_area #> 1                17844           10238     21.38429   7.318485 #> 2                56673           17057     13.95026   2.534419 #> 3                11058            5630     12.70792   2.107965 #> 4               111703           49860     12.65087   1.679487 #> 5                 2545            1886     21.17905   5.747937 #> 6                 6874            3657     17.29261   8.100680 #>                             geom #> 1 MULTIPOLYGON (((-73.66003 1... #> 2 MULTIPOLYGON (((-76.05542 3... #> 3 MULTIPOLYGON (((-76.08495 1... #> 4 MULTIPOLYGON (((-77.2381 4.... #> 5 MULTIPOLYGON (((-69.84572 1... #> 6 MULTIPOLYGON (((-67.7076 4.... dict <- geospatial_dictionary(spatial_level = \"dpto\", language = \"EN\")  head(dict) #> # A tibble: 6 × 4 #>   variable            type         length description                            #>   <chr>               <chr>         <dbl> <chr>                                  #> 1 codigo_departamento Text              2 Department code                        #> 2 departamento        Text            250 Department name                        #> 3 version             Long Integer     NA Year of validity of the department in… #> 4 area                Double           NA Department area in square meters (Pla… #> 5 latitud             Double           NA Centroid latitude coordinate of the d… #> 6 longitud            Double           NA Centroid longitude coordinate of the … internet_cov <- dpto %>% mutate(internet = round(viv_internet / viviendas, 2))"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/geospatial_data.html","id":"static-plots-ggplot2","dir":"Articles","previous_headings":"","what":"Static plots (ggplot2)","title":"Maps and plots with ColOpenData","text":"ggplot2 can used generate static plots spatial data using geometry geom_sf(). Color palettes themes can defined plot using aesthetic scales, can consulted ggplot2 documentation. use gradient two-color diverging palette, make differences visible.","code":"ggplot(data = internet_cov) +   geom_sf(mapping = aes(fill = internet), color = NA) +   theme_minimal() +   theme(     plot.background = element_rect(fill = \"white\", colour = \"white\"),     panel.background = element_rect(fill = \"white\", colour = \"white\"),     panel.grid = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank()   ) +   scale_fill_gradient(\"Percentage\", low = \"#10bed2\", high = \"#deff00\") +   ggtitle(     label = \"Internet coverage\",     subtitle = \"Colombia\"   )"},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/geospatial_data.html","id":"dynamic-plots-leaflet","dir":"Articles","previous_headings":"","what":"Dynamic plots (leaflet)","title":"Maps and plots with ColOpenData","text":"dynamic plots, can use leaflet, open-source library interactive maps. create plot first create color palette. previous color palette can generate interactive plot. package also includes open source maps base map like OpenStreetMap CartoDB. details leaflet, please refer package’s documentation.","code":"colfunc <- colorRampPalette(c(\"#10bed2\", \"#deff00\")) pal <- colorNumeric(   palette = colfunc(100),   domain = internet_cov[[\"internet\"]] ) leaflet(internet_cov) %>%   addProviderTiles(providers$CartoDB.Positron) %>%   addPolygons(     stroke = TRUE,     weight = 0,     color = NA,     fillColor = ~ pal(internet_cov[[\"internet\"]]),     fillOpacity = 1,     popup = paste0(internet_cov[[\"internet\"]])   ) %>%   addLegend(     position = \"bottomright\",     pal = pal,     values = ~ internet_cov[[\"internet\"]],     opacity = 1,     title = \"Internet Coverage\"   )"},{"path":[]},{"path":"https://epiverse-trace.github.io/ColOpenData/articles/merge_geo_demographic.html","id":"documentation-access","dir":"Articles","previous_headings":"How to merge geospatial and demographic data","what":"Documentation access","title":"Integration of Geospatial and Demographic data","text":"Geospatial demographic data can merged based spatial aggregation level (SAL). geospatial data can aggregated block level, demographic data typically available department municipality levels. Therefore, SAL can accessed types data merging. Now, merge_geo_demographic() function takes parameter demographic dataset interest. Therefore, first access demographic documentation know dataset want work . Let’s suppose want select dataset department level. can load demographic available datasets filter level desired SAL. reviewing available datasets, can select one wish work take closer look. instance, let’s suppose choose dataset “DANE_CNPVPD_2018_14BPD”. chosen_data presents information regarding health service attended people last thirty days illness, accident, dental problem health problem. Now, can use merge_geo_demographic() function. simplified argument downloads simplified version geometries. recommended accurate applications, simple plot approximation enough. Also, makes download process much faster. override , use simplified = FALSE. merged_data presents geospatial information related departments, well information related health service attended population. can use dataset visualize proportion people department used home remedies health issues. achieve , calculate proportion dividing count people reported using home remedies (“uso_remedios_caseros”) total count people reported experiencing health problem department. can now plot results","code":"datasets_dem <- list_datasets(\"demographic\", \"EN\")  department_datasets <- datasets_dem[datasets_dem[\"level\"] == \"department\", ]  head(department_datasets) #> # A tibble: 6 × 7 #>   name                 group       source year  level      category  description #>   <chr>                <chr>       <chr>  <chr> <chr>      <chr>     <chr>       #> 1 DANE_CNPVH_2018_1HD  demographic DANE   2018  department househol… Number of … #> 2 DANE_CNPVH_2018_2HD  demographic DANE   2018  department househol… Number of … #> 3 DANE_CNPVH_2018_3HD  demographic DANE   2018  department househol… Households… #> 4 DANE_CNPVPD_2018_1PD demographic DANE   2018  department persons_… Total cens… #> 5 DANE_CNPVPD_2018_3PD demographic DANE   2018  department persons_… Total cens… #> 6 DANE_CNPVPD_2018_4PD demographic DANE   2018  department persons_… Census pop… chosen_dataset <- download_demographic(\"DANE_CNPVPD_2018_14BPD\") #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative.  head(chosen_dataset) #>   codigo_departamento departamento  sexo grupo_de_edad  area #> 1               total     Nacional total         total total #> 2               total     Nacional total         total total #> 3               total     Nacional total         total total #> 4               total     Nacional total         total total #> 5               total     Nacional total         total total #> 6               total     Nacional total         total total #>                                      servicio_salud_al_que_acudieron   total #> 1                      total_personas_que_tuvieron_alguna_enfermedad 4528062 #> 2                                                    sin_informacion    7942 #> 3 a_la_entidad_de_seguridad_social_en_salud_a_la_cual_esta_afliado_a 3383667 #> 4                                             a_un_medico_particular  316709 #> 5                                a_un_boticario_farmaceuta_droguista  165061 #> 6                                            a_terapias_alternativas    8791 merged_data <- merge_geo_demographic(   demographic_dataset =     \"DANE_CNPVPD_2018_14BPD\" ) #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative.  head(merged_data) #> Simple feature collection with 6 features and 17 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -77.12783 ymin: 3.730633 xmax: -71.94885 ymax: 11.10537 #> Geodetic CRS:  WGS 84 #>   codigo_departamento departamento version        area   latitud  longitud #> 1                  05    Antioquia    2018 62804708983  6.922796 -75.56499 #> 2                  08    Atlántico    2018  3315752105 10.677010 -74.96522 #> 3                  11 Bogotá, D.C.    2018  1622852605  4.316108 -74.18107 #> 4                  13      Bolívar    2018 26719196397  8.745271 -74.50864 #> 5                  15       Boyacá    2018 23138048132  5.776607 -73.10207 #> 6                  17       Caldas    2018  7425221672  5.342066 -75.30688 #>   total_personas_que_tuvieron_alguna_enfermedad sin_informacion #> 1                                        607587             386 #> 2                                        136114              61 #> 3                                        821237             367 #> 4                                        141100              70 #> 5                                        127593              41 #> 6                                        108484              35 #>   a_la_entidad_de_seguridad_social_en_salud_a_la_cual_esta_afliado_a #> 1                                                             481028 #> 2                                                              99448 #> 3                                                             606769 #> 4                                                              97660 #> 5                                                              98319 #> 6                                                              86471 #>   a_un_medico_particular a_un_boticario_farmaceuta_droguista #> 1                  47391                               18035 #> 2                   9862                                2954 #> 3                  74809                               25556 #> 4                   9693                                3638 #> 5                   9122                                4153 #> 6                   6388                                3338 #>   a_terapias_alternativas acudio_a_una_autoridad_indigena_espiritual #> 1                     937                                        107 #> 2                     187                                         10 #> 3                    2194                                        130 #> 4                     227                                         25 #> 5                     276                                         15 #> 6                     132                                         83 #>   otro_medico_de_un_grupo_etnico uso_remedios_caseros se_autorreceto #> 1                            318                24227          19728 #> 2                             22                 6011          14288 #> 3                            351                65359          23385 #> 4                             64                 9650          15396 #> 5                             61                10023           2503 #> 6                            112                 6743           2784 #>   no_hizo_nada                       geometry #> 1        15430 MULTIPOLYGON (((-74.83058 8... #> 2         3271 MULTIPOLYGON (((-74.91077 1... #> 3        22317 MULTIPOLYGON (((-74.15067 4... #> 4         4677 MULTIPOLYGON (((-76.17318 9... #> 5         3080 MULTIPOLYGON (((-72.04767 7... #> 6         2398 MULTIPOLYGON (((-74.66496 5... merged_data <- merged_data %>%   mutate(proportion_home_remedies = uso_remedios_caseros /     total_personas_que_tuvieron_alguna_enfermedad) ggplot(data = merged_data) +   geom_sf(mapping = aes(fill = proportion_home_remedies), color = \"white\") +   theme_minimal() +   theme(     plot.background = element_rect(fill = \"white\", colour = \"white\"),     panel.background = element_rect(fill = \"white\", colour = \"white\"),     panel.grid = element_blank(),     axis.text = element_blank(),     axis.ticks = element_blank(),     plot.title = element_text(hjust = 0.5)   ) +   scale_fill_gradient(\"Count\", low = \"#10bed2\", high = \"#deff00\") +   ggtitle(     label = \"Proportion of people who reported using home remedies to treat     a health problem\",     subtitle = \"Colombia\"   )"},{"path":"https://epiverse-trace.github.io/ColOpenData/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maria Camila Tavera-Cifuentes. Author, maintainer, copyright holder. Julian Otero. Author, copyright holder. Natalia Nino-Machado. Contributor. Catalina Gonzalez-Uribe. Contributor. Juan Manuel Cordovez. Contributor. Hugo Gruson. Reviewer. Chris Hartgerink. Reviewer. Karim Mane. Reviewer. Joshua W. Lambert. Reviewer.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tavera-Cifuentes M, Otero J (2024). ColOpenData: Download Colombian Demographic, Climate Geospatial Data. R package version 0.3.0, https://epiverse-trace.github.io/ColOpenData/, https://github.com/epiverse-trace/ColOpenData.","code":"@Manual{,   title = {ColOpenData: Download Colombian Demographic, Climate and Geospatial Data},   author = {Maria Camila Tavera-Cifuentes and Julian Otero},   year = {2024},   note = {R package version 0.3.0,     https://epiverse-trace.github.io/ColOpenData/},   url = {https://github.com/epiverse-trace/ColOpenData}, }"},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"id_-packagename--","dir":"","previous_headings":"","what":"Download Colombian Demographic, Climate and Geospatial Data","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"ColOpenData package designed access curated wrangled Colombian demographic, geospatial, climate population projections data, retrieved various open Colombian data sources. package addresses challenge scattered Colombian data across multiple web sources providing functions enable users select load desired datasets without need extensive data acquisition processes. Additionally, tidy data structure offered demographic climate data facilitates analysis visualization. ColOpenData developed Universidad de Los Andes part Epiverse-TRACE program.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"can install development version ColOpenData GitHub :","code":"# install.packages(\"pak\") pak::pak(\"epiverse-trace/ColOpenData\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"quick-overview","dir":"","previous_headings":"","what":"Quick Overview","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"ColOpenData contains data two public data sources: National Administrative Department Statistics (DANE), Institute Hydrology, Meteorology Environmental Studies (IDEAM). available data divided four categories: Demographic: Demographic Socioeconomic data presents information National Population Dwelling Census (CNPV) 2018. CNPV data corresponds recent census available date information presented answer three questions: many ?, ? live? information can consulted CNPV results. Geospatial: data retrieved National Geostatistical Framework (MGN), includes maps summarized version 2018 CNPV, aggregated spatial geometries. data available different aggregation levels including: Blocks, Urban Rural Sections, Urban Rural Sectors, Urban Areas, Municipalities Departments. information available MGN update news. Climate: Climate data recovered backup information provided IDEAM, containing historical data first station country (January 1st 1920) May 31st 2023. backup includes temperature, precipitation, sunshine duration, wind direction, among others. information can found IDEAM website. Population projections: Population Projections data contains population projections back projections 1950 2070, considering post COVID-19 update, calculated based results 2018 CNPV. information can consulted DANE website. Documentation vignettes available modules user vignettes.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"related-r-packages","dir":"","previous_headings":"Quick Overview","what":"Related R Packages","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"Similar R packages offered international communities, allowing user download census, geospatial climate data. cancensus: Canada censobr: Brazil chilemapas: Chile geobr : Brazil georAr: Argentina geouy: Uruguay tidycensus: US geofi: Finland climate","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"lifecycle","dir":"","previous_headings":"Quick Overview","what":"Lifecycle","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"package currently experimental, defined RECON software lifecycle. Therefore, functional draft can tested outside development team. However, still may change time.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"contributions","dir":"","previous_headings":"Quick Overview","what":"Contributions","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"Contributions welcome via pull requests.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"code-of-conduct","dir":"","previous_headings":"Quick Overview","what":"Code of Conduct","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"Please note ColOpenData project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/index.html","id":"funding","dir":"","previous_headings":"Quick Overview","what":"Funding","title":"Download Colombian Demographic, Climate and Geospatial Data","text":"work part TRACE-LAC research project funded International Research Centre (IDRC) Ottawa, Canada.[109848-001-].","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_annual.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual aggregate of climate data — aggregate_annual","title":"Calculate annual aggregate of climate data — aggregate_annual","text":"Calculate annual aggregate climate data","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_annual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual aggregate of climate data — aggregate_annual","text":"","code":"aggregate_annual(monthly_data, FUN)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_annual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate annual aggregate of climate data — aggregate_annual","text":"monthly_data data.frame monthly aggregated data. FUN Function use aggregation.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_annual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate annual aggregate of climate data — aggregate_annual","text":"data.frame object annual aggregated data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate climate data for different frequencies — aggregate_climate","title":"Aggregate climate data for different frequencies — aggregate_climate","text":"Aggregate time series downloaded climate data day, month year. observations tags TSSM_CON, TMN_CON, TMX_CON, PTPM_CON, BSHG_CON can aggregated, since ones methodology aggregation explicitly provided source.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate climate data for different frequencies — aggregate_climate","text":"","code":"aggregate_climate(climate_data, frequency)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_climate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate climate data for different frequencies — aggregate_climate","text":"climate_data data.frame obtained download functions. observations tag can aggregated. frequency character aggregation frequency: (\"day\", \"month\" \"year\").","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_climate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate climate data for different frequencies — aggregate_climate","text":"data.frame object aggregated data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_climate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate climate data for different frequencies — aggregate_climate","text":"","code":"if (FALSE) { # \\dontrun{ lat <- c(4.172817, 4.172817, 4.136050, 4.136050, 4.172817) lon <- c(-74.749121, -74.686169, -74.686169, -74.749121, -74.749121) polygon <- sf::st_polygon(x = list(cbind(lon, lat))) geometry <- sf::st_sfc(polygon) roi <- sf::st_as_sf(geometry) ptpm <- download_climate_geom(roi, \"2022-11-01\", \"2022-12-31\", \"PTPM_CON\") monthly_ptpm <- aggregate_climate(ptpm, \"month\") head(monthly_ptpm) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily aggregate of climate data — aggregate_daily","title":"Calculate daily aggregate of climate data — aggregate_daily","text":"Calculate daily aggregate climate data","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily aggregate of climate data — aggregate_daily","text":"","code":"aggregate_daily(hourly_data, FUN)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily aggregate of climate data — aggregate_daily","text":"hourly_data data.frame hourly aggregated data. FUN Function use aggregation.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily aggregate of climate data — aggregate_daily","text":"data.frame object daily aggregated data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_monthly.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly aggregate of climate data — aggregate_monthly","title":"Calculate monthly aggregate of climate data — aggregate_monthly","text":"Calculate monthly aggregate climate data","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_monthly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly aggregate of climate data — aggregate_monthly","text":"","code":"aggregate_monthly(daily_data, FUN)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_monthly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate monthly aggregate of climate data — aggregate_monthly","text":"daily_data data.frame daily aggregated data. FUN Function use aggregation.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/aggregate_monthly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate monthly aggregate of climate data — aggregate_monthly","text":"data.frame object monthly aggregated data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_bshg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual sunshine duration — annual_bshg","title":"Calculate annual sunshine duration — annual_bshg","text":"Calculate annual sunshine duration","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_bshg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual sunshine duration — annual_bshg","text":"","code":"annual_bshg(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_ptpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual precipitation — annual_ptpm","title":"Calculate annual precipitation — annual_ptpm","text":"Calculate annual precipitation","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_ptpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual precipitation — annual_ptpm","text":"","code":"annual_ptpm(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual minimum temperature — annual_tmn","title":"Calculate annual minimum temperature — annual_tmn","text":"Calculate annual minimum temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual minimum temperature — annual_tmn","text":"","code":"annual_tmn(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual maximum temperature — annual_tmx","title":"Calculate annual maximum temperature — annual_tmx","text":"Calculate annual maximum temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual maximum temperature — annual_tmx","text":"","code":"annual_tmx(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate annual dry-bulb mean temperature — annual_tssm","title":"Calculate annual dry-bulb mean temperature — annual_tssm","text":"Calculate annual dry-bulb mean temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/annual_tssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate annual dry-bulb mean temperature — annual_tssm","text":"","code":"annual_tssm(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/check_climate_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Check arguments in climate functions — check_climate_args","title":"Check arguments in climate functions — check_climate_args","text":"Climate functions three common arguments: start_date, end_date tag. function checks start_date end_date can converted date using format \"YYYY-MM-DD\", end_date greater start_date, tag requested exists.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/check_climate_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check arguments in climate functions — check_climate_args","text":"","code":"check_climate_args(start_date, end_date, tag)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/check_climate_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check arguments in climate functions — check_climate_args","text":"start_date character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date character last date consult format \"YYYY-MM-DD\". (Last available date \"2023-05-31\"). tag character containing climate tag consult.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/check_climate_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check arguments in climate functions — check_climate_args","text":"list arguments needed formats. input invalid error thrown.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/climate_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"climate_tags — climate_tags","title":"climate_tags — climate_tags","text":"dictionary climate tags","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/climate_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"climate_tags — climate_tags","text":"","code":"data(climate_tags)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/climate_tags.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"climate_tags — climate_tags","text":"object class list length 2.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/climate_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"climate_tags — climate_tags","text":"Dictionary climate tags","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","title":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","text":"Retrieve departments' DIVIPOLA official names DIVIPOLA codes.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","text":"","code":"code_to_name_dep(department_code)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","text":"department_code character vector DIVIPOLA codes departments.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","text":"character vector DIVIPOLA name departments.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_dep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve departments' DIVIPOLA names from codes — code_to_name_dep","text":"","code":"dptos <- c(\"73\", \"05\", \"11\") code_to_name_dep(dptos) #> [1] \"Tolima\"       \"Antioquia\"    \"Bogotá, D.C.\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_mun.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","title":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","text":"Retrieve municipalities' DIVIPOLA official names DIVIPOLA codes.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_mun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","text":"","code":"code_to_name_mun(municipality_code)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_mun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","text":"municipality_code character vector DIVIPOLA codes municipalities.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_mun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","text":"character vector DIVIPOLA name municipalities.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/code_to_name_mun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve municipalities' DIVIPOLA names from codes — code_to_name_mun","text":"","code":"mpios <- c(\"73001\", \"11001\", \"05615\") code_to_name_mun(mpios) #> [1] \"Ibagué\"       \"Bogotá, D.C.\" \"Rionegro\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_bshg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily sunshine duration — daily_bshg","title":"Calculate daily sunshine duration — daily_bshg","text":"Calculate daily sunshine duration","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_bshg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily sunshine duration — daily_bshg","text":"","code":"daily_bshg(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_tssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate aggregation rules — daily_tssm","title":"Climate aggregation rules — daily_tssm","text":"Climate temporal aggregation rules provided source, guarantee data quality given missing information. rules included package make download aggregation process easier user. aggregation available climate data, available information tags TSSM_CON, TMN_CON, TMX_CON, PTPM_CON, BSHG_CON. Internal functions provided set comprehensible rules aggregate data daily, monthly annual frequencies.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_tssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate aggregation rules — daily_tssm","text":"","code":"daily_tssm(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_tssm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Climate aggregation rules — daily_tssm","text":"group data.frame object filtered grouped data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_tssm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Climate aggregation rules — daily_tssm","text":"numeric value calculated.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/daily_tssm.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Climate aggregation rules — daily_tssm","text":"Aggregation can performed previous level, meaning monthly aggregation, data must already aggregated daily, annual aggregation data must monthly.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/datasets_list.html","id":null,"dir":"Reference","previous_headings":"","what":"datasets_list — datasets_list","title":"datasets_list — datasets_list","text":"list datasets description English Spanish","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/datasets_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"datasets_list — datasets_list","text":"","code":"data(datasets_list)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/datasets_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"datasets_list — datasets_list","text":"object class list length 2.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/datasets_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"datasets_list — datasets_list","text":"List containing datasets description English Spanish","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/divipola_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve DIVIPOLA table — divipola_table","title":"Retrieve DIVIPOLA table — divipola_table","text":"Retrieve DIVIPOLA table including departments municipalities. DIVIPOLA codification includes individual codes department municipality following political administrative division.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/divipola_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve DIVIPOLA table — divipola_table","text":"","code":"divipola_table()"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/divipola_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve DIVIPOLA table — divipola_table","text":"data.frame object DIVIPOLA table.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/divipola_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve DIVIPOLA table — divipola_table","text":"","code":"divipola <- divipola_table()"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Download climate from named geometry (municipality or department) — download_climate","title":"Download climate from named geometry (municipality or department) — download_climate","text":"Download climate data stations contained municipality department. data retrieved local meteorological stations provided IDEAM.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download climate from named geometry (municipality or department) — download_climate","text":"","code":"download_climate(code, start_date, end_date, tag)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download climate from named geometry (municipality or department) — download_climate","text":"code character DIVIPOLA code area (2 digits departments 5 digits municipalities). start_date character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date character last date consult format \"YYYY-MM-DD\". (Last available date \"2023-05-31\"). tag character containing climate tag consult. Please use cliamte_tags() check IDEAM tags.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download climate from named geometry (municipality or department) — download_climate","text":"data.frame object observations stations area.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download climate from named geometry (municipality or department) — download_climate","text":"","code":"if (FALSE) { # \\dontrun{ ptpm <- download_climate(\"73148\", \"2021-11-14\", \"2021-11-20\", \"PTPM_CON\") head(ptpm) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Download climate data from geometry — download_climate_geom","title":"Download climate data from geometry — download_climate_geom","text":"Download climate data stations contained Region Interest (ROI/geometry). data retrieved local meteorological stations provided IDEAM.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download climate data from geometry — download_climate_geom","text":"","code":"download_climate_geom(geometry, start_date, end_date, tag)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download climate data from geometry — download_climate_geom","text":"geometry sf object containing geometry given ROI. geometry can either POLYGON MULTIPOLYGON. start_date character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date character last date consult format \"YYYY-MM-DD\". (Last available date \"2023-05-31\"). tag character containing climate tag consult.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download climate data from geometry — download_climate_geom","text":"data.frame object observations stations area.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download climate data from geometry — download_climate_geom","text":"","code":"if (FALSE) { # \\dontrun{ lat <- c(4.172817, 4.172817, 4.136050, 4.136050, 4.172817) lon <- c(-74.749121, -74.686169, -74.686169, -74.749121, -74.749121) polygon <- sf::st_polygon(x = list(cbind(lon, lat))) geometry <- sf::st_sfc(polygon) roi <- sf::st_as_sf(geometry) ptpm <- download_climate_geom(roi, \"2022-11-14\", \"2022-11-20\", \"PTPM_CON\") head(ptpm) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Download climate data from stations — download_climate_stations","title":"Download climate data from stations — download_climate_stations","text":"Download climate data IDEAM stations individual codes.data retrieved local meteorological stations provided IDEAM.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download climate data from stations — download_climate_stations","text":"","code":"download_climate_stations(stations, start_date, end_date, tag)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download climate data from stations — download_climate_stations","text":"stations data.frame containing stations' codes location. data.frame must retrieved function stations_in_roi() start_date character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date character last date consult format \"YYYY-MM-DD\". (Last available date \"2023-05-31\"). tag character containing climate tag consult.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download climate data from stations — download_climate_stations","text":"data.frame object observations stations area.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_climate_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download climate data from stations — download_climate_stations","text":"","code":"if (FALSE) { # \\dontrun{ lat <- c(4.172817, 4.172817, 4.136050, 4.136050, 4.172817) lon <- c(-74.749121, -74.686169, -74.686169, -74.749121, -74.749121) polygon <- sf::st_polygon(x = list(cbind(lon, lat))) geometry <- sf::st_sfc(polygon) roi <- sf::st_as_sf(geometry) stations <- stations_in_roi(roi) ptpm <- download_climate_stations(   stations, \"2022-11-14\", \"2022-11-20\", \"PTPM_CON\" ) head(ptpm) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_demographic.html","id":null,"dir":"Reference","previous_headings":"","what":"Download demographic dataset — download_demographic","title":"Download demographic dataset — download_demographic","text":"function downloads demographic datasets National Population Dwelling Census (CNPV) 2018.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_demographic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download demographic dataset — download_demographic","text":"","code":"download_demographic(dataset)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_demographic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download demographic dataset — download_demographic","text":"dataset character demographic dataset name. Please use list_datasets(\"demographic\", \"EN\") list_datasets(\"demographic\", \"ES\") check available datasets.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_demographic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download demographic dataset — download_demographic","text":"data.frame object downloaded data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_demographic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download demographic dataset — download_demographic","text":"","code":"house_under_15 <- download_demographic(\"DANE_CNPVH_2018_1HD\") #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative. head(house_under_15) #>   codigo_departamento departamento  area                      condicion #> 1                  00         <NA> total                  total_hogares #> 2                  00         <NA> total hogares_con_menores_de_15_anos #> 3                  00         <NA> total       total_menores_de_15_anos #> 4                  05    Antioquia total                  total_hogares #> 5                  05    Antioquia total hogares_con_menores_de_15_anos #> 6                  05    Antioquia total       total_menores_de_15_anos #>      total #> 1 14243223 #> 2  6216640 #> 3  9932653 #> 4  1983566 #> 5   778216 #> 6  1173475"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_geospatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Download geospatial dataset — download_geospatial","title":"Download geospatial dataset — download_geospatial","text":"function downloads geospatial datasets National Geostatistical Framework different levels spatial aggregation. datasets include summarized version National Population Dwelling Census (CNPV) demographic socioeconomic information spatial unit.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_geospatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download geospatial dataset — download_geospatial","text":"","code":"download_geospatial(   spatial_level,   simplified = TRUE,   include_geom = TRUE,   include_cnpv = TRUE )"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_geospatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download geospatial dataset — download_geospatial","text":"spatial_level character spatial level consulted: \"DPTO\" \"department\": Department. \"MPIO\" \"municipality\": Municipality. \"MPIOCL\" \"municipality_class\": Municipality including class. \"SETU\" \"urban_sector\": Urban Sector. \"SETR\" \"rural_sector\": Rural Sector. \"SECU\" \"urban_section\": Urban Section. \"SECR\" \"rural_section\": Rural Section. \"ZU\"  \"urban_zone\": Urban Zone. \"MZN\" \"block\": Block. simplified logical indicating downloaded spatial data simplified version geometries. Simplified versions lighter less precise, recommended easier applications like plots. Default TRUE. include_geom logical including () spatial geometry. Default TRUE. TRUE, function return \"sf\" data.frame. include_cnpv logical including () CNPV demographic socioeconomic information. Default TRUE.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_geospatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download geospatial dataset — download_geospatial","text":"data.frame object downloaded data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_geospatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download geospatial dataset — download_geospatial","text":"","code":"if (FALSE) { # \\dontrun{ departments <- download_geospatial(\"department\") head(departments) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_pop_projections.html","id":null,"dir":"Reference","previous_headings":"","what":"Download population projections — download_pop_projections","title":"Download population projections — download_pop_projections","text":"function downloads population projections back projections taken National Population Dwelling Census 2018 (CNPV), adjusted COVID-19. Available years different spatial level: \"national\": 1950 - 2070. \"national\" sex: 1985 - 2050. \"department\": 1985 - 2050. \"department\" sex: 1985 - 2050. \"municipality\": 1985 - 2035. \"municipality\" sex: 1985 - 2035. \"municipality\" sex ethnic groups: 2018 - 2035.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_pop_projections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download population projections — download_pop_projections","text":"","code":"download_pop_projections(   spatial_level,   start_year,   end_year,   include_sex = FALSE,   include_ethnic = FALSE )"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_pop_projections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download population projections — download_pop_projections","text":"spatial_level character spatial level consulted. Can either \"national\", \"department\" \"municipality\". start_year numeric start year consulted. end_year numeric end year consulted. include_sex logical including () division sex. Default FALSE. include_ethnic logical including () division ethnic group (available \"municipality\"). Default FALSE.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_pop_projections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download population projections — download_pop_projections","text":"data.frame object downloaded data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/download_pop_projections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download population projections — download_pop_projections","text":"","code":"pop_proj <- download_pop_projections(\"national\", 2020, 2030) #> Original data is retrieved from the National Administrative Department #> of Statistics (Departamento Administrativo Nacional de Estadística - #> DANE). #> Reformatted by package authors. #> Stored by Universidad de Los Andes under the Epiverse TRACE iniative. head(pop_proj) #>   codigo_departamento   departamento  ano                              area #> 1                  00 Total nacional 2020                          cabecera #> 2                  00 Total nacional 2020 centros_poblados_y_rural_disperso #> 3                  00 Total nacional 2020                             total #> 4                  00 Total nacional 2021                          cabecera #> 5                  00 Total nacional 2021 centros_poblados_y_rural_disperso #> 6                  00 Total nacional 2021                             total #>      total #> 1 38235229 #> 2 12172418 #> 3 50407647 #> 4 38850492 #> 5 12266886 #> 6 51117378"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionaries.html","id":null,"dir":"Reference","previous_headings":"","what":"geospatial_dictionaries — geospatial_dictionaries","title":"geospatial_dictionaries — geospatial_dictionaries","text":"dictionaries variables presented geospatial datasets","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geospatial_dictionaries — geospatial_dictionaries","text":"","code":"data(geospatial_dictionaries)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionaries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"geospatial_dictionaries — geospatial_dictionaries","text":"object class list length 2.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionaries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"geospatial_dictionaries — geospatial_dictionaries","text":"Dictionaries geospatial datasets English Spanish","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data dictionaries — geospatial_dictionary","title":"Download data dictionaries — geospatial_dictionary","text":"Retrieve geospatial data dictionaries understand internal tags named columns. Dictionaries available English Spanish.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data dictionaries — geospatial_dictionary","text":"","code":"geospatial_dictionary(spatial_level, language = \"ES\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data dictionaries — geospatial_dictionary","text":"spatial_level character spatial level consulted: \"DPTO\" \"department\": Department. \"MPIO\" \"municipality\": Municipality. \"MPIOCL\" \"municipality_class\": Municipality including class. \"SETU\" \"urban_sector\": Urban Sector. \"SETR\" \"rural_sector\": Rural Sector. \"SECU\" \"urban_section\": Urban Section. \"SECR\" \"rural_section\": Rural Section. \"ZU\"  \"urban_zone\": Urban Zone. \"MZN\" \"block\": Block. language character language dictionary variables (\"EN\" \"ES\". Default \"ES\".","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data dictionaries — geospatial_dictionary","text":"data.frame object geospatial data dictionary.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/geospatial_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data dictionaries — geospatial_dictionary","text":"","code":"dict <- geospatial_dictionary(\"setu\", \"EN\") head(dict) #> # A tibble: 6 × 4 #>   variable                 type  length description                              #>   <chr>                    <chr>  <dbl> <chr>                                    #> 1 codigo_departamento      Text       2 Department code                          #> 2 codigo_municipio_sin_con Text       3 Municipality code                        #> 3 codigo_municipio         Text       5 Concatenated municipality code           #> 4 codigo_clase             Text       1 Class code 1 municipal seat, 2 populate… #> 5 codigo_setr_sin_con      Text       3 Rural sector code                        #> 6 codigo_setr              Text       9 Concatenated rural sector code (departm…"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/get_climate_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"List climate (IDEAM) tags — get_climate_tags","title":"List climate (IDEAM) tags — get_climate_tags","text":"Retrieve available climate tags consulted. list available Spanish.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/get_climate_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List climate (IDEAM) tags — get_climate_tags","text":"","code":"get_climate_tags(language = \"ES\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/get_climate_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List climate (IDEAM) tags — get_climate_tags","text":"language character language tags (\"EN\" \"ES\". Default \"ES\".","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/get_climate_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List climate (IDEAM) tags — get_climate_tags","text":"data.frame object available climate tags.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/get_climate_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List climate (IDEAM) tags — get_climate_tags","text":"","code":"dict <- get_climate_tags(\"ES\") head(dict) #>   etiqueta                                   variable #> 1 TSSM_CON                Temperatura seca (ambiente) #> 2 THSM_CON                         Temperatura humeda #> 3  TMN_CON                         Temperatura minima #> 4  TMX_CON                         Temperatura maxima #> 5 TSTG_CON Temperatura seca (ambiente) del termografo #> 6   HR_CAL                           Humedad relativa #>                                frecuencia #> 1 Horaria (07:00, 13:00, 18:00 y/o 19:00) #> 2 Horaria (07:00, 13:00, 18:00 y/o 19:00) #> 3                                  Diaria #> 4                                  Diaria #> 5                      Horaria (24 horas) #> 6 Horaria (07:00, 13:00, 18:00 y/o 19:00)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/list_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Download list of available datasets — list_datasets","title":"Download list of available datasets — list_datasets","text":"List available datasets name, including group, source, year, level, category description.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/list_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download list of available datasets — list_datasets","text":"","code":"list_datasets(module = \"all\", language = \"ES\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/list_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download list of available datasets — list_datasets","text":"module character module consulted (\"demographic\", \"geospatial\" \"climate\"). Default \"\". language character language dataset details (\"EN\" \"ES\". Default \"ES\".","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/list_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download list of available datasets — list_datasets","text":"data.frame object available datasets.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/list_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download list of available datasets — list_datasets","text":"","code":"list <- list_datasets(\"geospatial\", \"EN\") head(list) #> # A tibble: 6 × 7 #>   name                 group      source year  level        category description #>   <chr>                <chr>      <chr>  <chr> <chr>        <chr>    <chr>       #> 1 DANE_MGN_2018_DPTO   geospatial DANE   2018  department   maps     Geographic… #> 2 DANE_MGN_2018_MPIO   geospatial DANE   2018  municipality maps     Geographic… #> 3 DANE_MGN_2018_MPIOCL geospatial DANE   2018  municipalit… maps     Geographic… #> 4 DANE_MGN_2018_SETU   geospatial DANE   2018  urban_sector maps     Geographic… #> 5 DANE_MGN_2018_SETR   geospatial DANE   2018  rural_sector maps     Geographic… #> 6 DANE_MGN_2018_SECU   geospatial DANE   2018  urban_secti… maps     Geographic…"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/look_up.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter list of available datasets based on keywords given by the user — look_up","title":"Filter list of available datasets based on keywords given by the user — look_up","text":"List available datasets containing user-specified keywords descriptions.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/look_up.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter list of available datasets based on keywords given by the user — look_up","text":"","code":"look_up(keywords, module = \"all\", logic = \"or\", language = \"EN\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/look_up.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter list of available datasets based on keywords given by the user — look_up","text":"keywords character vector characters look description. module character module consulted (\"demographic\", \"geospatial\", \"climate\"). Default \"\". logic character string specifying matching logic. Can either \"\" \"\". Default \"\": logic = \"\": Matches rows containing least one specified keywords descriptions. logic = \"\": Matches rows containing specified keywords descriptions. language character language keywords (\"EN\" \"ES\". Default \"EN\".","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/look_up.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter list of available datasets based on keywords given by the user — look_up","text":"data.frame object available datasets containing information related consulted keywords.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/look_up.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter list of available datasets based on keywords given by the user — look_up","text":"","code":"found <- look_up(c(\"sex\", \"age\"), \"demographic\", \"and\", \"EN\") head(found) #> # A tibble: 6 × 7 #>   name                  group       source year  level      category description #>   <chr>                 <chr>       <chr>  <chr> <chr>      <chr>    <chr>       #> 1 DANE_CNPVPD_2018_1PD  demographic DANE   2018  department persons… Total cens… #> 2 DANE_CNPVPD_2018_1PM  demographic DANE   2018  municipal… persons… Total cens… #> 3 DANE_CNPVPD_2018_2PT  demographic DANE   2018  national   persons… Total cens… #> 4 DANE_CNPVPD_2018_3PD  demographic DANE   2018  department persons… Total cens… #> 5 DANE_CNPVPD_2018_3PM  demographic DANE   2018  municipal… persons… Total cens… #> 6 DANE_CNPVPD_2018_5BPD demographic DANE   2018  department persons… Census pop…"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/merge_geo_demographic.html","id":null,"dir":"Reference","previous_headings":"","what":"Match and merge geospatial and demographic datasets — merge_geo_demographic","title":"Match and merge geospatial and demographic datasets — merge_geo_demographic","text":"function adds key information demographic dataset geospatial dataset based spatial aggregation level. Since smallest level spatial aggregation present demographic datasets municipality, function can merge geospatial datasets present municipality department level.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/merge_geo_demographic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match and merge geospatial and demographic datasets — merge_geo_demographic","text":"","code":"merge_geo_demographic(demographic_dataset, simplified = TRUE)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/merge_geo_demographic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match and merge geospatial and demographic datasets — merge_geo_demographic","text":"demographic_dataset character demographic dataset name. Please use list_datasets(\"demographic\", \"EN\") list_datasets(\"demographic\", \"ES\") check available datasets. simplified logical indicating downloaded spatial data simplified version geometries. Simplified versions lighter less precise, recommended easier applications like plots. Default TRUE.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/merge_geo_demographic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match and merge geospatial and demographic datasets — merge_geo_demographic","text":"data.frame object merged data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/merge_geo_demographic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match and merge geospatial and demographic datasets — merge_geo_demographic","text":"","code":"if (FALSE) { # \\dontrun{ merged <- merge_geo_demographic(\"DANE_CNPVV_2018_9VD\", TRUE) head(merged) } # }"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_bshg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly sunshine duration — monthly_bshg","title":"Calculate monthly sunshine duration — monthly_bshg","text":"Calculate monthly sunshine duration","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_bshg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly sunshine duration — monthly_bshg","text":"","code":"monthly_bshg(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_ptpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly precipitation — monthly_ptpm","title":"Calculate monthly precipitation — monthly_ptpm","text":"Calculate monthly precipitation","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_ptpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly precipitation — monthly_ptpm","text":"","code":"monthly_ptpm(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly minimum temperature — monthly_tmn","title":"Calculate monthly minimum temperature — monthly_tmn","text":"Calculate monthly minimum temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly minimum temperature — monthly_tmn","text":"","code":"monthly_tmn(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tmx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly maximum temperature — monthly_tmx","title":"Calculate monthly maximum temperature — monthly_tmx","text":"Calculate monthly maximum temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tmx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly maximum temperature — monthly_tmx","text":"","code":"monthly_tmx(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tssm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate monthly dry-bulb mean temperature — monthly_tssm","title":"Calculate monthly dry-bulb mean temperature — monthly_tssm","text":"Calculate monthly dry-bulb mean temperature","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/monthly_tssm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate monthly dry-bulb mean temperature — monthly_tssm","text":"","code":"monthly_tssm(group)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","title":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","text":"Retrieve departments' DIVIPOLA codes names.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","text":"","code":"name_to_code_dep(department_name)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","text":"department_name character vector names departments.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","text":"character vector DIVIPOLA codes departments.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_dep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve departments' DIVIPOLA codes from names — name_to_code_dep","text":"","code":"dptos <- c(\"Tolima\", \"Huila\", \"Amazonas\") name_to_code_dep(dptos) #> [1] \"73\" \"41\" \"91\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_mun.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","title":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","text":"Retrieve municipalities' DIVIPOLA codes names. Since municipalities names different departments, input must include two vectors: one departments one municipalities said departments. one department provided, try match municipalities second vector inside department. Otherwise, vectors must length.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_mun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","text":"","code":"name_to_code_mun(department_name, municipality_name)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_mun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","text":"department_name character vector names departments containing municipalities. municipality_name character vector names municipalities.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_mun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","text":"character vector DIVIPOLA codes municipalities.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_code_mun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve municipalities' DIVIPOLA codes from names — name_to_code_mun","text":"","code":"dptos <- c(\"Huila\", \"Antioquia\") mpios <- c(\"Pitalito\", \"Turbo\") name_to_code_mun(dptos, mpios) #> [1] \"41551\" \"05837\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","title":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","text":"Department names usually manually input, leads multiple errors lack standardization. functions translates department names respective official names DIVIPOLA.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","text":"","code":"name_to_standard_dep(department_name)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_dep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","text":"department_name character vector names translated.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_dep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","text":"character vector DIVIPOLA name departments.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_dep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate department names to official departments' DIVIPOLA names — name_to_standard_dep","text":"","code":"dptos <- c(\"Bogota DC\", \"San Andres\") name_to_standard_dep(dptos) #> [1] \"Bogotá, D.C.\"                                             #> [2] \"Archipiélago de San Andrés. Providencia y Santa Catalina\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_mun.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","title":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","text":"Municipality names usually manually input, leads multiple errors lack standardization. functions translates municipality names respective official names DIVIPOLA.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_mun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","text":"","code":"name_to_standard_mun(department_name, municipality_name)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_mun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","text":"department_name character vector names departments containing municipalities. municipality_name character vector names translated.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_mun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","text":"character vector DIVIPOLA name municipalities.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/name_to_standard_mun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate municipality names to official municipalities' DIVIPOLA names — name_to_standard_mun","text":"","code":"dptos <- c(\"Bogota\", \"Tolima\") mpios <- c(\"Bogota DC\", \"CarmendeApicala\") name_to_standard_mun(dptos, mpios) #> [1] \"Bogotá, D.C.\"      \"Carmen de Apicalá\""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve climate table file from one station — retrieve_climate","title":"Retrieve climate table file from one station — retrieve_climate","text":"Retrieve climate table file one station","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve climate table file from one station — retrieve_climate","text":"","code":"retrieve_climate(dataset_path, start_date, end_date)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve climate table file from one station — retrieve_climate","text":"dataset_path character path climate dataset server. start_date character first date consult format \"YYYY-MM-DD\". (First available date \"1920-01-01\"). end_date character last date consult format \"YYYY-MM-DD\" (Last available date \"2023-05-31\").","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve climate table file from one station — retrieve_climate","text":"data.frame object downloaded data filtered requested dates.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve climate directory path — retrieve_climate_path","title":"Retrieve climate directory path — retrieve_climate_path","text":"Climate data retrieved general directory. Path build said directory.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve climate directory path — retrieve_climate_path","text":"","code":"retrieve_climate_path()"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_climate_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve climate directory path — retrieve_climate_path","text":"character path retrieve dataset server.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve code — retrieve_code","title":"Retrieve code — retrieve_code","text":"Retrieve code list codes, matching input token list fixed tokens.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve code — retrieve_code","text":"","code":"retrieve_code(input_token, fixed_tokens, codes_list)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve code — retrieve_code","text":"input_token Input token search fixed tokens. fixed_tokens Vector tokens match . codes_list Vector target codes.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve code — retrieve_code","text":"character containing matched code.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_dict_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve dictionary path of named dataset — retrieve_dict_path","title":"Retrieve dictionary path of named dataset — retrieve_dict_path","text":"Dictionaries included general documentation file. Therefore, path built internally.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_dict_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve dictionary path of named dataset — retrieve_dict_path","text":"","code":"retrieve_dict_path(dict_name)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_dict_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve dictionary path of named dataset — retrieve_dict_path","text":"dict_name character dictionary name.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_dict_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve dictionary path of named dataset — retrieve_dict_path","text":"character path retrieve dataset.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_geospatial_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve geospatial dataset name for consultation — retrieve_geospatial_name","title":"Retrieve geospatial dataset name for consultation — retrieve_geospatial_name","text":"Retrieve geospatial dataset name spatial level. Checks existence spatial level datasets.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_geospatial_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve geospatial dataset name for consultation — retrieve_geospatial_name","text":"","code":"retrieve_geospatial_name(spatial_level)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_geospatial_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve geospatial dataset name for consultation — retrieve_geospatial_name","text":"spatial_level character spatial level consulted.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_geospatial_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve geospatial dataset name for consultation — retrieve_geospatial_name","text":"character containing geospatial dataset name. input invalid error thrown.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve demographic and geospatial path of named dataset — retrieve_path","title":"Retrieve demographic and geospatial path of named dataset — retrieve_path","text":"Demographic Geospatial datasets included general documentation file. Path built information general file.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve demographic and geospatial path of named dataset — retrieve_path","text":"","code":"retrieve_path(dataset)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve demographic and geospatial path of named dataset — retrieve_path","text":"dataset character dataset name.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve demographic and geospatial path of named dataset — retrieve_path","text":"character path retrieve dataset server.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_support_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve support dataset path — retrieve_support_path","title":"Retrieve support dataset path — retrieve_support_path","text":"Support data used internal purposes included general documentation file.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_support_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve support dataset path — retrieve_support_path","text":"","code":"retrieve_support_path(dataset)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_support_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve support dataset path — retrieve_support_path","text":"dataset character support dataset name.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_support_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve support dataset path — retrieve_support_path","text":"character path retrieve dataset server.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve table (csv and data) file — retrieve_table","title":"Retrieve table (csv and data) file — retrieve_table","text":"Retrieve table (csv data) file","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve table (csv and data) file — retrieve_table","text":"","code":"retrieve_table(dataset_path, sep = \";\")"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve table (csv and data) file — retrieve_table","text":"dataset_path character path dataset server. sep separator table data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve table (csv and data) file — retrieve_table","text":"data.frame object downloaded data.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_value_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve value from key — retrieve_value_key","title":"Retrieve value from key — retrieve_value_key","text":"Retrieve value key included configuration file.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_value_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve value from key — retrieve_value_key","text":"","code":"retrieve_value_key(key)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_value_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve value from key — retrieve_value_key","text":"key character key.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/retrieve_value_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve value from key — retrieve_value_key","text":"character containing associated value.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/stations_in_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Stations in region of interest — stations_in_roi","title":"Stations in region of interest — stations_in_roi","text":"Download filter climate stations contained inside region interest (ROI).","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/stations_in_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stations in region of interest — stations_in_roi","text":"","code":"stations_in_roi(geometry)"},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/stations_in_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stations in region of interest — stations_in_roi","text":"geometry sf object containing geometry given ROI. geometry can either POLYGON MULTIPOLYGON.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/stations_in_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stations in region of interest — stations_in_roi","text":"data.frame object stations contained inside consulted geometry.","code":""},{"path":"https://epiverse-trace.github.io/ColOpenData/reference/stations_in_roi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stations in region of interest — stations_in_roi","text":"","code":"if (FALSE) { # \\dontrun{ lat <- c(5.166278, 5.166278, 4.982247, 4.982247, 5.166278) lon <- c(-75.678072, -75.327859, -75.327859, -75.678072, -75.678072) polygon <- sf::st_polygon(x = list(cbind(lon, lat))) geometry <- sf::st_sfc(polygon) roi <- sf::st_as_sf(geometry) stations <- stations_in_roi(roi) head(stations) } # }"}]
